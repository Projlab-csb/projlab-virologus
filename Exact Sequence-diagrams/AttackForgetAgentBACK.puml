@startuml
'https://plantuml.com/sequence-diagram

autonumber

mainframe Attack Forget Agent Back

actor Player

Player -> "virologist: Virologist"++: useAgent(forget, targetVirologist)
 "virologist: Virologist" -> "targetVirologist: TargetVirologist"++: attack(forget, virologist, targetVirologist)

 "targetVirologist: TargetVirologist" -> "gloves: Gloves" ++ : applyEffect(targetVirologist)

 "gloves: Gloves"  -> "gloves: Gloves" ++ : getStrategy()
 "gloves: Gloves"  --> "gloves: Gloves" -- : defenseStrategy

 "gloves: Gloves"  -> "targetVirologist: TargetVirologist"++: setDefenseStrategy(defensestrategy)

"targetVirologist: TargetVirologist" -> "targetVirologist: TargetVirologist"++: defense(forget, virologist,  targetVirologist)

note over "targetVirologist: TargetVirologist"
    Gloves will attack back the attacker
    At implementation, we must make sure, **no infinite loop** occurs!
end note

"targetVirologist: TargetVirologist" -> "virologist: Virologist"++: attack(forget,  targetVirologist, virologist)
"virologist: Virologist" -> "forget: Forget"++ : applyEffect(virologist)

    note over "virologist: Virologist", "forget: Forget"
    Clear the agents array on the virologist
    end note

    "forget: Forget" -> "virologist: Virologist"++ : setAgents([])
    "virologist: Virologist" --> "forget: Forget"--
    "forget: Forget" --> "virologist: Virologist"--
"virologist: Virologist" --> "targetVirologist: TargetVirologist"--

"targetVirologist: TargetVirologist" --> "targetVirologist: TargetVirologist" --

"targetVirologist: TargetVirologist" --> "gloves: Gloves" --
"gloves: Gloves" --> "targetVirologist: TargetVirologist" --


"targetVirologist: TargetVirologist" --> "virologist: Virologist" --

"virologist: Virologist" --> Player --
@enduml