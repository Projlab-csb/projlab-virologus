@startuml
'https://plantuml.com/sequence-diagram

autonumber

mainframe Attack Protection Agent Back

actor Player

Player -> "virologist: Virologist"++: useAgent(protection, targetVirologist)
 "virologist: Virologist" -> "targetVirologist: TargetVirologist"++: attack(protection, virologist, targetVirologist)

 "targetVirologist: TargetVirologist" -> "cloak: Cloak" ++ : applyEffect(targetVirologist)

 "cloak: Cloak"  -> "cloak: Cloak" ++ : getStrategy()
 "cloak: Cloak"  --> "cloak: Cloak" -- : defenseStrategy

 "cloak: Cloak"  -> "targetVirologist: TargetVirologist"++: setDefenseStrategy(defensestrategy)

"targetVirologist: TargetVirologist" -> "targetVirologist: TargetVirologist"++: defense(protection, virologist,  targetVirologist)

note over "targetVirologist: TargetVirologist"
    Gloves will attack back the attacker
    At implementation, we must make sure, **no infinite loop** occurs!
end note

"targetVirologist: TargetVirologist" -> "virologist: Virologist"++: attack(protection,  targetVirologist, virologist)
"virologist: Virologist" -> "protection: Protection"++ : applyEffect(targetVirologist)

    "protection: Protection" -> "protection: Protection"++ : getStrategy()
    "protection: Protection" --> "protection: Protection"-- : defenseStrategy

    "protection: Protection" -> "virologist: Virologist"++: setDefenseStrategy(defenseStrategy)
    "virologist: Virologist" --> "protection: Protection"--
 "protection: Protection" --> "virologist: Virologist"--
"virologist: Virologist" --> "targetVirologist: TargetVirologist"--

"targetVirologist: TargetVirologist" --> "cloak: Cloak" --
"cloak: Cloak" --> "targetVirologist: TargetVirologist" --


"targetVirologist: TargetVirologist" --> "virologist: Virologist" --

"virologist: Virologist" --> Player --
@enduml