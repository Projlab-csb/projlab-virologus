@startuml
'https://plantuml.com/sequence-diagram

autonumber

mainframe Attack Paralyze Agent Back

actor Player

Player -> "virologist: Virologist"++: useAgent(paralyzed, targetVirologist)
"virologist: Virologist" -> "targetVirologist: Virologist"++: attack(paralyzed, virologist, targetVirologist)
"targetVirologist: Virologist" -> "cloak: Cloak"++ : applyEffect(targetVirologist)
"cloak: Cloak" -> "cloak: Cloak"++ : getStrategy()
"cloak: Cloak" --> "cloak: Cloak"-- : defenseStrategy

"cloak: Cloak" -> "targetVirologist: Virologist"++: setDefenseStrategy(defensestrategy: DefenseStrategy)

"targetVirologist: Virologist" -> "targetVirologist: Virologist"++: defense(paralyzed, virologist, targetVirologist)

note over "targetVirologist: Virologist"
    Gloves will attack back the attacker
    At implementation, we must make sure, **no infinite loop** occurs!
end note

"targetVirologist: Virologist" -> "virologist: Virologist"++: attack(paralyzed, targetVirologist, virologist)
"virologist: Virologist" -> "paralyzed: Paralyzed"++ : applyEffect(virologist)
"paralyzed: Paralyzed" -> "paralyzed: Paralyzed"++ : getStrategy()
      "paralyzed: Paralyzed" --> "paralyzed: Paralyzed"-- : roundRunStrategy
      "paralyzed: Paralyzed" -> "virologist: Virologist"++: setRoundRunStrategy(roundRunStrategy)
      "virologist: Virologist" --> "paralyzed: Paralyzed"--
      "paralyzed: Paralyzed" --> "virologist: Virologist"--
"virologist: Virologist" --> "targetVirologist: Virologist"--

"targetVirologist: Virologist" --> "targetVirologist: Virologist" --

"targetVirologist: Virologist" --> "cloak: Cloak" --
"cloak: Cloak" --> "targetVirologist: Virologist" --

"targetVirologist: Virologist" --> "virologist: Virologist" --

"virologist: Virologist" --> Player --
@enduml