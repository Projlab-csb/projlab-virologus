@startuml
'https://plantuml.com/sequence-diagram

autonumber

mainframe Attack Protection Agent Def

actor Player

Player -> "virologist: Virologist"++: useAgent(protection, targetVirologist)
 "virologist: Virologist" -> "targetVirologist: Virologist"++: attack(protection, virologist, targetVirologist)

 "targetVirologist: Virologist" -> "cloak: Cloak" ++ : applyEffect(targetVirologist)

 "cloak: Cloak"  -> "cloak: Cloak" ++ : getStrategy()
 "cloak: Cloak"  --> "cloak: Cloak" -- : defenseStrategy

 "cloak: Cloak"  -> "targetVirologist: Virologist"++: setDefenseStrategy(defensestrategy)


"targetVirologist: Virologist" -> "targetVirologist: Virologist"++: defense(protection, virologist,  targetVirologist)


note over "targetVirologist: Virologist"
    When the virologist have a cloak, there is
    an **82.3%** chance that the attack will **fail.**
end note

note right of "targetVirologist: Virologist"
Get a random number as a percentage.
end note

"targetVirologist: Virologist" -> "targetVirologist: Virologist": surviveRate = generateRandomNumber()

opt if (surviveRate > 0.823)
    "targetVirologist: Virologist" -> "protection: Protection"++ : applyEffect(targetVirologist)

        "protection: Protection" -> "protection: Protection"++ : getStrategy()
        "protection: Protection" --> "protection: Protection"-- : defenseStrategy

        "protection: Protection" -> "targetVirologist: Virologist"++: setDefenseStrategy(defenseStrategy)
        "targetVirologist: Virologist" --> "protection: Protection"--
     "protection: Protection" --> "targetVirologist: Virologist"--
end opt

"targetVirologist: Virologist" --> "targetVirologist: Virologist" --

"targetVirologist: Virologist" --> "cloak: Cloak" --
"cloak: Cloak" --> "targetVirologist: Virologist" --


"targetVirologist: Virologist" --> "virologist: Virologist" --

"virologist: Virologist" --> Player --
@enduml