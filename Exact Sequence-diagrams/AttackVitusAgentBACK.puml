@startuml
'https://plantuml.com/sequence-diagram

autonumber

mainframe Attack VitusDance Agent Back

actor Player

Player -> "virologist: Virologist"++: useAgent(vitusDance, targetVirologist)
"virologist: Virologist" -> "targetVirologist: Virologist"++: attack(vitusDance, virologist, targetVirologist)
"targetVirologist: Virologist" -> "cloak: Cloak"++ : applyEffect(targetVirologist)

"cloak: Cloak" -> "cloak: Cloak"++ : getStrategy()
"cloak: Cloak" --> "cloak: Cloak"-- : defenseStrategy

"cloak: Cloak" -> "targetVirologist: Virologist"++: setDefenseStrategy(defensestrategy)

"targetVirologist: Virologist" -> "targetVirologist: Virologist"++: defense(vitusDance, virologist,  targetVirologist)

note over "targetVirologist: Virologist"
    Gloves will attack back the attacker
    At implementation, we must make sure, **no infinite loop** occurs!
end note

"targetVirologist: Virologist" -> "virologist: Virologist"++: attack(vitusDance,  targetVirologist, virologist)
"virologist: Virologist" -> "vitusDance: VitusDance"++ : applyEffect(virologist)

       "vitusDance: VitusDance" -> "vitusDance: VitusDance"++ : getStrategy()
       "vitusDance: VitusDance" --> "vitusDance: VitusDance"-- : moveStrategy

       "vitusDance: VitusDance" -> "virologist: Virologist"++: setMoveStrategy(moveStrategy)
       "virologist: Virologist" --> "vitusDance: VitusDance"--

       "vitusDance: VitusDance" --> "virologist: Virologist"--
"virologist: Virologist" --> "targetVirologist: Virologist"--

"targetVirologist: Virologist" --> "targetVirologist: Virologist" --

"targetVirologist: Virologist" --> "cloak: Cloak" --
"cloak: Cloak" --> "targetVirologist: Virologist" --


"targetVirologist: Virologist" --> "virologist: Virologist" --

"virologist: Virologist" --> Player --
@enduml