@startuml
'https://plantuml.com/sequence-diagram
autonumber

mainframe Steal Cloak

actor Player

Player -> "robberVirologist: Virologist"++: steal(robberVirologist, targetVirologist)

"robberVirologist: Virologist" ->  "targetVirologist: Virologist"++: handleEquipmentSteal(robberVirologist, targetVirologist)


        note left  "targetVirologist: Virologist"
            The player choose the wanted thing here
        end note

         "targetVirologist: Virologist"->"gloves:Gloves"++:discard()
                   "gloves:Gloves" -> "gloves:Gloves"++ : removeEffect(targetVirologist)
                    note over  "targetVirologist: Virologist", "gloves:Gloves"
                    Reset the protection strategy to **virologists default**
                     end note
        
                    "gloves:Gloves" ->  "targetVirologist: Virologist"++: setProtectionStrategy()
                    "targetVirologist: Virologist" --> "gloves:Gloves"--
        
                    "gloves:Gloves"-->  "gloves:Gloves"--
        
                         "gloves:Gloves"--> "targetVirologist: Virologist"--

     "targetVirologist: Virologist" -->"robberVirologist: Virologist"--: cloak
  "robberVirologist: Virologist" -> "cloak: Cloak": collectBy(Virologist)
    Activate "cloak: Cloak"
 
     "cloak: Cloak" -> "cloak: Cloak"++ : applyEffect(virologist)
 
       "cloak: Cloak" -> "cloak: Cloak"++ : getStrategy()
       "cloak: Cloak" --> "cloak: Cloak"-- : defenseStrategy
 
       "cloak: Cloak" -> "robberVirologist: Virologist"++: setDefenseStrategy(defenseStrategy)
       "robberVirologist: Virologist" --> "cloak: Cloak"--
 
       "cloak: Cloak" --> "cloak: Cloak"--
 
    "cloak: Cloak" --> "robberVirologist: Virologist":
    Deactivate "cloak: Cloak"


"robberVirologist: Virologist" --> Player --
@enduml