@startuml

interface Steppable{
    'Invoked at the start of the next Round eg. reduce the Agent's lifetime
    +nextRound()
}

interface Collectable{
    +collectBy(v: Virologist)
}

class Field{
    +getNeighbors(): Array<Field>
    +getNeighbor(direction: Integer): Field
    +addNeighbor(neighbor: Field)
    +acceptVirologist(virologist: Virologist)
    +removeVirologist(virologist: Virologist)
}

class Lab{
    +getGencode(): Gencode
}

class Storage{
    +getAminoAcid(amount: Integer): AminoAcid
    +getNucleicAcid(amount: Integer): NucleicAcid
}

class Shelter{
    '+getEquipmentCount(): Integer
    +getEquipment(): Equipment
}

class Virologist {
    +move(direction: Integer)
    'In the collect function we can use the this.getField()
    +collect(): Collectable
    +discard(collectable: Collectable)
    +createAgent(gencode: Gencode)
    +useAgent(agent: Agent, attacker: Virologist, defender: Virologist)
    +stealEquipment(robber: Virologist): Equipment
    +stealMatter(matter: Matter): Matter
    +canTouch(robber: Virologist): boolean
    +nextRound()
}

abstract class Matter {
    {abstract} +collectBy(v: Virologist)
}

class AminoAcid{
    +collectBy(v: Virologist)
}
class NucleicAcid{
    +collectBy(v: Virologist)
}

abstract class Equipment {
    {abstract} +collectBy(v: Virologist)
    {abstract} +applyEffect(v: Virologist)
    {abstract} +removeEffect(v: Virologist)
}

class Cloak{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

class Gloves{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

class Bag{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

abstract class Agent{
    gencode: Gencode
    {abstract} +applyEffect(v: Virologist)
    {abstract} +removeEffect(v: Virologist)
    {abstract} +nextRound()
}

class Virus{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

class Vaccine{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

'This Gencode is basically the crafting receipt of the Agent
class Gencode {
    +requiredNucleicAcid: NucleicAcid
    + requiredAminoAcid: AminoAcid
    +collectBy(v: Virologist)
}

Field <|- Lab
Field <|-- Storage
Field <|-- Shelter

Lab "n" o- "1" Gencode
Shelter "n" o-- "1" Equipment
Storage "n" o-- "1" Matter

Virologist "n" --o "1" Field
Virologist "n" *-d- "1" Matter
Virologist "n" *-d- "1" Equipment
Virologist <|-l Steppable
Virologist "n" o-d- "1" Gencode

Matter <|-- AminoAcid
Matter <|-- NucleicAcid

Equipment <|-- Cloak
Equipment <|-- Gloves
Equipment <|-- Bag

Agent <|- Steppable
Agent <|-- Virus
Agent <|-- Vaccine
Agent "1" o--o "1" Gencode

Collectable <|.l Gencode
Collectable <|.. Equipment
Collectable <|. Matter

@enduml