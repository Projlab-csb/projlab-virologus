@startuml

'The class diagram doesn't show implicit getters and setters for fields!

interface RoundRunStrategyInterface{
    +roundRun()
    +handleSteal(attacker: Virologist, robbed: Virologist): Collectable
}

interface MoveStrategyInterface{
    +move(direction: Integer)
}

interface DefenseStrategyInterface{
    +defense(agent: Agent, attacker: Virologist, defender: Virologist)
}


interface Collectable{
    +collectBy(v: Virologist)
    +destroy()
}

class GameController {
    'Handle the turns, this knows the order of virologists, and calls the appropriate round() functions
    '+endOfTurn(virologist: Virologist)
    'Checks if the virologist won the game
    +reportGenCodes(v:Virologist,g: Gencode[] )
    +initGame()
    '+gameOver()
}

class Field{
    +getCollectable(): <Collectable>
    +getNeighbors(): Array<Field>
    +getNeighbor(direction: Integer): Field
    +addNeighbor(neighbor: Field)
    +acceptVirologist(virologist: Virologist)
    +removeVirologist(virologist: Virologist)
}

class Lab{
    +getGencode(): Gencode
}

class Storage{
    +getAminoAcid(amount: Integer): AminoAcid
    +getNucleicAcid(amount: Integer): NucleicAcid
}

class Shelter{
    '+getEquipmentCount(): Integer
    +getEquipment(): Equipment
}

class Virologist {
    +move(direction: Integer)
    'In the collect function we can use the this.getField()
    +collect()
    +discard(collectable: Collectable)
    +createAgent(gencode: Gencode) : Agent
    +useAgent(agent: Agent, defender: Virologist)
    +attack(agent: Agent, attacker: Virologist, defender: Virologist)
    +steal(Robber, TargetVirologist)
    +startOfTurn()
    'Iterates over all the Agents in the virologist and calls their decreaseTTL() function
    +refreshAgents()
}

abstract class Matter {
    {abstract} +collectBy(v: Virologist)
}

class AminoAcid{
    +collectBy(v: Virologist)
}
class NucleicAcid{
    +collectBy(v: Virologist)
}

abstract class Equipment {
    {abstract} +collectBy(v: Virologist)
    {abstract} +applyEffect(v: Virologist)
    {abstract} +removeEffect(v: Virologist)
}

class Cloak{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

class Gloves{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

class Bag{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}
class Axe{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

abstract class Agent{
    {abstract} +applyEffect(v: Virologist)
    {abstract} +removeEffect(v: Virologist)
    'Each agent has a time to live value, and when it reaches 0, it is destroyed
    'The return value means if the agent is still alive
    {abstract} +decreaseTTL() : Boolean
}

class VitusDance{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
    +move(direction: Integer)
}

class Protection{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

class Paralyzed{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

class Forget{
    +applyEffect(v: Virologist)
    +removeEffect(v: Virologist)
}

'This Gencode is basically the crafting receipt of the Agent
class Gencode {
    +requiredNucleicAcid: NucleicAcid
    + requiredAminoAcid: AminoAcid
    +collectBy(v: Virologist)
}

GameController *-d Virologist
'GameController *-- Gencode

Field <|- Lab
Field <|-- Storage
Field <|-- Shelter

Lab "n" o-- Gencode
Shelter "n" o-- Equipment
Storage "n" o-- Matter

Virologist *-r- RoundRunStrategyInterface
Virologist *-- MoveStrategyInterface
Virologist *-- DefenseStrategyInterface
Virologist --o "n" Field
Virologist "n" *-- Agent
Virologist "n" *-- Matter
Virologist "n" *-- Equipment
Virologist "n" o-u-- Gencode

Matter <|-- AminoAcid
Matter <|-- NucleicAcid

Equipment <|-- Cloak
Equipment <|-- Gloves
Equipment <|-- Bag
Equipment <|-- Axe

Agent <|-- VitusDance
Agent <|- Protection
Agent <|- Paralyzed
Agent <|-- Forget
Agent "1" *-- Gencode

RoundRunStrategyInterface <|. Paralyzed
MoveStrategyInterface <|. VitusDance
DefenseStrategyInterface <|.. Protection
DefenseStrategyInterface <|.. Cloak
DefenseStrategyInterface <|.. Gloves

Collectable <|. Gencode
Collectable <|.. Equipment
Collectable <|. Matter

'Implicit stuff, comment it out for easier readability
RoundRunStrategyInterface .. Collectable
DefenseStrategyInterface .. Agent
DefenseStrategyInterface .[hidden]. Virologist
Collectable .. Virologist
GameController . Gencode
Field .. Collectable
'Field .. Virologist
Gencode .. Matter

@enduml